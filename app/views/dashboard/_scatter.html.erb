
<div id="charts" class="row">
    <div id="<%= chartID %>" class="chart span4">
        <strong>Average Competitive Prices</strong>
    </div>
    <div class="chart span3">
        <div id="<%= chartID %>2"><strong>Part Category Filter</strong></div>
    </div>
    <div class="chart span3">
        <div id="<%= chartID %>3"><strong>Competition Filter</strong></div>
    </div>
</div>

<div class="row">
  <div class="span3"/>
  <div class="chart span9">
    <div id="<%= chartID %>4"></div>
  </div>
</div>

<div class="row">
  <div class="span12">
    <div id="tablecontainer">
        <table id="dc-data-table" class="list table table-striped table-bordered">
            <thead>
                <tr>
                  <th>Competition Name</th>
                  <th>Part Number</th>
                  <th>Month</th>
                  <th>Price</th>
                  <th>Competitive Price</th>
                  <th>Part Category</th>
                </tr>
            </thead>
        </table>
    </div>
  </div>
</div>

<script type="text/javascript">

    var scatterChartExample = {
        initChart: function(ibis_data)
        {
            var timeExtent = d3.extent(ibis_data, function(d) { return d.month});
            var chart = dc.bubbleChart("#<%= chartID %>");
            var chart2 = dc.rowChart("#<%= chartID %>2");
            var chart3 = dc.rowChart("#<%= chartID %>3");
            var dateChart = dc.barChart("#<%= chartID %>4");

            var ndx             = crossfilter(ibis_data),
                dateDimension   = ndx.dimension(function(d) {return d.month; }),
                dateGroup       = dateDimension.group().reduceCount(),
                priceDimension  = ndx.dimension(function(d) {return d.part_number; }),
                priceGroup = priceDimension.group().reduce(
                        function (p, v) {
                            ++p.count;
                            p.part_category = v.part_category;
                            p.sumPrice += v.price;
                            p.sumCompetitivePrice += v.competitive_price;
                            p.avgPrice = p.sumPrice/p.count;
                            p.avgCompetitivePrice = p.sumCompetitivePrice/p.count;
                            return p;
                        },
                        function (p, v) {
                            --p.count;
                            p.sumPrice -= v.price;
                            p.part_category = v.part_category;
                            p.sumCompetitivePrice -= v.competitive_price;
                            p.avgPrice = p.count ? p.sumPrice/p.count : 0;
                            p.avgCompetitivePrice = p.count ? p.sumCompetitivePrice : 0;
                            return p;
                        },
                        function () {
                            return { count:0, part_category: "", sumPrice:0, avgPrice:0, sumCompetitivePrice: 0, avgCompetitivePrice:0 };
                        }
                ),
                competitionDimension = ndx.dimension(function(d) {return d.competition_name;}),
                competitionGroup     = competitionDimension.group().reduceCount(),
                categoryDimension    = ndx.dimension(function(d) {return d.part_category;}),
                categoryGroup        = categoryDimension.group().reduceCount();

            dateChart
                    .elasticY(true)
                    .renderHorizontalGridLines(true)
                    .width(1043)
                    .height(100)
                    .x(d3.time.scale().domain(timeExtent))
                    .brushOn(true)
                    .colors(d3.scale.ordinal().domain([""]).range(["#7f7f7f"]))
                    .round(d3.time.month.round)
                    .yAxisLabel("Price Points")
                    .xUnits(d3.time.months)
                    .dimension(dateDimension)
                    .group(dateGroup)
                    .yAxis().ticks(3);

            var maxValue = d3.max(priceGroup.all(), function (d) {
                return Math.max(d.value.avgCompetitivePrice, d.value.avgPrice);
            });
            maxValue = Math.round(maxValue/10 + 1) * 10;
            chart
                    .width(443)
                    .height(400)
                    .x(d3.scale.linear().domain([0,maxValue]))
                    .y(d3.scale.linear().domain([0,maxValue]))
                    .radiusValueAccessor(function(d) {
                        if(d.value.count === 0)
                            return 0;
                        else return 1;})
                    .renderHorizontalGridLines(true)
                    .renderVerticalGridLines(true)
                    .xAxisPadding(5)
                    .yAxisPadding(5)
                    .renderLabel(false)
                    .keyAccessor(function(d) {return d.value.avgPrice })
                    .valueAccessor(function(d){ return d.value.avgCompetitivePrice })
                    .colors(d3.scale.ordinal().domain(["OE MOTORCRAFT ROTOR AND DRUM", "BRAKE DRUM ASSEMBLIES", "HUB ASSEMBLIES", "MOTORCRAFT NON-RETAIL ROTOR & DRUM"]).range(["#ff7f0e", "#2ca02c", "#d62728", "#1f77b4"]))
                    .colorAccessor(function(d) { return d.value.part_category; })
                    .yAxisLabel("Average Competitive Price")
                    .xAxisLabel("Motorcraft Price")
                    .dimension(priceDimension)
                    .group(priceGroup)
                    .renderTitle(true)
                    .title(function (d) {
                        return [
                            "Part Number: " + d.key,
                            "Part Category: " + d.value.part_category,
                            "Price: $" + d3.round(d.value.avgPrice, 2),
                            "Average Competitive Price: $" + d3.round(d.value.avgCompetitivePrice, 2),
                            "Count:" + d.value.count
                        ].join("\n");
                    });

            chart.renderlet(function (chart) {
                dc.events.trigger(function () {
                    var maxValue = d3.max(priceGroup.all(), function (d) {
                        return Math.max(d.value.avgCompetitivePrice, d.value.avgPrice);
                    });
                    maxValue = Math.round(maxValue/10 + 1) * 10;
                    chart.yAxis().scale(d3.scale.linear().domain([0,maxValue]).range(chart.yAxis().scale().range()));
                    chart.y(d3.scale.linear().domain([0, maxValue]));
                    chart.renderYAxis(chart.g());
                    chart.xAxis().scale(d3.scale.linear().domain([0,maxValue]).range(chart.xAxis().scale().range()));
                    chart.x(d3.scale.linear().domain([0, maxValue]));
                    chart.renderXAxis(chart.g());
                    chart.redraw();
                });
            });

            chart2
                    .width(300)
                    .height(400)
                    .margins({top: 5, left: 10, right: 10, bottom: 43})
                    .dimension(categoryDimension)
                    .group(categoryGroup)
                    .colors(d3.scale.ordinal().domain(["OE MOTORCRAFT ROTOR AND DRUM", "BRAKE DRUM ASSEMBLIES", "HUB ASSEMBLIES", "MOTORCRAFT NON-RETAIL ROTOR & DRUM"]).range(["#ff7f0e", "#2ca02c", "#d62728", "#1f77b4"]))
                    .elasticX(true)
                    .xAxis().ticks(4);

            chart3
                    .width(300)
                    .height(400)
                    .margins({top: 5, left: 10, right: 10, bottom: 43})
                    .dimension(competitionDimension)
                    .group(competitionGroup)
                    .colors(d3.scale.ordinal().domain([""]).range(["#7f7f7f"]))
                    .elasticX(true)
                    .xAxis().ticks(4);

            var dateFormat = d3.time.format("%b %Y");

            var datatable = $("#dc-data-table").dataTable({
                "bPaginate": false,
                "bLengthChange": false,
                "bFilter": false,
                "bSort": true,
                "bInfo": false,
                "bAutoWidth": false,
                "bDeferRender": true,
                "aaData": priceDimension.top(Infinity),
                "bDestroy": true,
                "aoColumns": [
                    { "mData": "competition_name", "sDefaultContent": " " },
                    { "mData": "part_number", "sDefaultContent": ""},
                    {
                        "mData": "month",
                        "sDefaultContent": " " ,
                        "sType" : "date",
                        "mRender": function(date, type, full) {
                            return dateFormat(date);
                        }
                    },
                    { "mData": "price", "sDefaultContent": " " },
                    { "mData": "competitive_price", "sDefaultContent": " " },
                    { "mData": "part_category", "sDefaultContent": " " }
                ]
            });

            function RefreshTable() {
                dc.events.trigger(function () {
                    alldata = priceDimension.top(Infinity);
                    datatable.fnClearTable();
                    datatable.fnAddData(alldata);
                    datatable.fnDraw();
                });
            }
            for (var i = 0; i < dc.chartRegistry.list().length; i++) {
                var chartI = dc.chartRegistry.list()[i];
                chartI.on("filtered", RefreshTable);
            }
            dc.renderAll();
        },

        initialize: function()
        {
            $.ajax({
                type: "GET",
                dataType: "json",
                async: false,
                url: "/retrieve_data",
                success: function(data){
                    var dateFormat = d3.time.format("%Y-%m-%d");
                    data.forEach(function (d) {
                        d.part_number = d.part_number;
                        d.month = d3.time.month(dateFormat.parse(d.month));
                        d.competitive_price = +d.competitive_price;
                        d.price = +d.price;
                        d.part_category = d.part_category;
                    });
                    scatterChartExample.initChart(data);
                }
            });
        }
    };
    scatterChartExample.initialize();
</script>